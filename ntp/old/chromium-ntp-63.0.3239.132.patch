diff -pruN chromium-62.0.3192.0.orig/chrome/browser/extensions/extension_service.cc chromium-62.0.3192.0/chrome/browser/extensions/extension_service.cc
--- chromium-62.0.3192.0.orig/chrome/browser/extensions/extension_service.cc	2017-08-22 21:04:39.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/extensions/extension_service.cc	2017-08-26 21:54:50.662424862 +0200
@@ -1143,13 +1143,6 @@ void ExtensionService::NotifyExtensionLo
     ThemeSource* theme_source = new ThemeSource(profile_);
     content::URLDataSource::Add(profile_, theme_source);
   }
-
-  // Same for chrome://thumb/ resources.
-  if (permissions_data->HasHostPermission(
-          GURL(chrome::kChromeUIThumbnailURL))) {
-    ThumbnailSource* thumbnail_source = new ThumbnailSource(profile_, false);
-    content::URLDataSource::Add(profile_, thumbnail_source);
-  }
 
   // When an existing extension is re-enabled, it may be necessary to spin up
   // its lazy background page.
diff -pruN chromium-62.0.3192.0.orig/chrome/browser/resources/local_ntp/local_ntp.js chromium-62.0.3192.0/chrome/browser/resources/local_ntp/local_ntp.js
--- chromium-62.0.3192.0.orig/chrome/browser/resources/local_ntp/local_ntp.js	2017-08-22 21:04:39.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/resources/local_ntp/local_ntp.js	2017-08-26 21:54:50.662424862 +0200
@@ -900,6 +900,3 @@ function reloadTiles() {
 
 }
 
-if (!window.localNTPUnitTest) {
-  LocalNTP().listen();
-}
diff -pruN chromium-62.0.3192.0.orig/chrome/browser/search/search.cc chromium-62.0.3192.0/chrome/browser/search/search.cc
--- chromium-62.0.3192.0.orig/chrome/browser/search/search.cc	2017-08-22 21:04:40.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/search/search.cc	2017-08-26 21:54:50.665758195 +0200
@@ -168,7 +168,7 @@ NewTabURLState IsValidNewTabURL(Profile*
     return NEW_TAB_URL_INSECURE;
   if (!IsURLAllowedForSupervisedUser(new_tab_url, profile))
     return NEW_TAB_URL_BLOCKED;
-  return NEW_TAB_URL_VALID;
+  return NEW_TAB_URL_NOT_SET;
 }
 
 bool ShouldShowLocalNewTab(const GURL& url, Profile* profile) {
diff -pruN chromium-62.0.3192.0.orig/chrome/browser/ui/search/search_ipc_router_policy_impl.cc chromium-62.0.3192.0/chrome/browser/ui/search/search_ipc_router_policy_impl.cc
--- chromium-62.0.3192.0.orig/chrome/browser/ui/search/search_ipc_router_policy_impl.cc	2017-08-22 21:04:40.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/ui/search/search_ipc_router_policy_impl.cc	2017-08-26 21:54:50.665758195 +0200
@@ -27,15 +27,15 @@ bool SearchIPCRouterPolicyImpl::ShouldPr
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessDeleteMostVisitedItem() {
-  return !is_incognito_ && search::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessUndoMostVisitedDeletion() {
-  return !is_incognito_ && search::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessUndoAllMostVisitedDeletions() {
-  return !is_incognito_ && search::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessLogEvent() {
@@ -69,7 +69,7 @@ bool SearchIPCRouterPolicyImpl::ShouldSe
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSendMostVisitedItems() {
-  return !is_incognito_ && search::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSendThemeBackgroundInfo() {
diff -pruN chromium-62.0.3192.0.orig/components/history/core/browser/top_sites_backend.cc chromium-62.0.3192.0/components/history/core/browser/top_sites_backend.cc
--- chromium-62.0.3192.0.orig/components/history/core/browser/top_sites_backend.cc	2017-08-22 21:04:42.000000000 +0200
+++ chromium-62.0.3192.0/components/history/core/browser/top_sites_backend.cc	2017-08-26 21:54:50.665758195 +0200
@@ -24,7 +24,7 @@
 namespace history {
 
 TopSitesBackend::TopSitesBackend()
-    : db_(new TopSitesDatabase()),
+    : db_(static_cast< TopSitesDatabase *> (NULL)),
       db_task_runner_(base::CreateSequencedTaskRunnerWithTraits(
           {base::TaskPriority::USER_VISIBLE,
            base::TaskShutdownBehavior::BLOCK_SHUTDOWN, base::MayBlock()})) {
@@ -33,52 +33,30 @@ TopSitesBackend::TopSitesBackend()
 
 void TopSitesBackend::Init(const base::FilePath& path) {
   db_path_ = path;
-  db_task_runner_->PostTask(
-      FROM_HERE, base::Bind(&TopSitesBackend::InitDBOnDBThread, this, path));
 }
 
 void TopSitesBackend::Shutdown() {
-  db_task_runner_->PostTask(
-      FROM_HERE, base::Bind(&TopSitesBackend::ShutdownDBOnDBThread, this));
 }
 
 void TopSitesBackend::GetMostVisitedThumbnails(
     const GetMostVisitedThumbnailsCallback& callback,
     base::CancelableTaskTracker* tracker) {
-  scoped_refptr<MostVisitedThumbnails> thumbnails = new MostVisitedThumbnails();
-  tracker->PostTaskAndReply(
-      db_task_runner_.get(), FROM_HERE,
-      base::Bind(&TopSitesBackend::GetMostVisitedThumbnailsOnDBThread, this,
-                 thumbnails),
-      base::Bind(callback, thumbnails));
 }
 
 void TopSitesBackend::UpdateTopSites(const TopSitesDelta& delta,
                                      const RecordHistogram record_or_not) {
-  db_task_runner_->PostTask(
-      FROM_HERE,
-      base::Bind(&TopSitesBackend::UpdateTopSitesOnDBThread, this, delta,
-                 record_or_not));
 }
 
 void TopSitesBackend::SetPageThumbnail(const MostVisitedURL& url,
                                        int url_rank,
                                        const Images& thumbnail) {
-  db_task_runner_->PostTask(
-      FROM_HERE, base::Bind(&TopSitesBackend::SetPageThumbnailOnDBThread, this,
-                            url, url_rank, thumbnail));
 }
 
 void TopSitesBackend::ResetDatabase() {
-  db_task_runner_->PostTask(
-      FROM_HERE,
-      base::Bind(&TopSitesBackend::ResetDatabaseOnDBThread, this, db_path_));
 }
 
 void TopSitesBackend::DoEmptyRequest(const base::Closure& reply,
                                      base::CancelableTaskTracker* tracker) {
-  tracker->PostTaskAndReply(db_task_runner_.get(), FROM_HERE,
-                            base::Bind(&base::DoNothing), reply);
 }
 
 TopSitesBackend::~TopSitesBackend() {
