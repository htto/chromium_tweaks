diff -pruN a/chromium-35.0.1916.47/chrome/browser/extensions/extension_service.cc b/chromium-35.0.1916.47/chrome/browser/extensions/extension_service.cc
--- a/chromium-35.0.1916.47/chrome/browser/extensions/extension_service.cc	2014-04-16 22:32:36.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/extensions/extension_service.cc	2014-04-17 09:56:24.598987406 +0200
@@ -1083,13 +1083,6 @@ void ExtensionService::NotifyExtensionLo
     content::URLDataSource::Add(profile_, theme_source);
   }
-
-  // Same for chrome://thumb/ resources.
-  if (extensions::PermissionsData::HasHostPermission(
-          extension, GURL(chrome::kChromeUIThumbnailURL))) {
-    ThumbnailSource* thumbnail_source = new ThumbnailSource(profile_, false);
-    content::URLDataSource::Add(profile_, thumbnail_source);
-  }
 #endif
 }
 
 void ExtensionService::NotifyExtensionUnloaded(
diff -pruN a/chromium-35.0.1916.47/chrome/browser/history/top_sites_backend.cc b/chromium-35.0.1916.47/chrome/browser/history/top_sites_backend.cc
--- a/chromium-35.0.1916.47/chrome/browser/history/top_sites_backend.cc	2014-04-16 22:32:37.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/history/top_sites_backend.cc	2014-04-17 09:56:24.598987406 +0200
@@ -17,64 +17,34 @@ using content::BrowserThread;
 namespace history {
 
 TopSitesBackend::TopSitesBackend()
-    : db_(new TopSitesDatabase()) {
+    : db_(static_cast< history::TopSitesDatabase *> (NULL)) {
 }
 
 void TopSitesBackend::Init(const base::FilePath& path) {
   db_path_ = path;
-  BrowserThread::PostTask(
-      BrowserThread::DB, FROM_HERE,
-      base::Bind(&TopSitesBackend::InitDBOnDBThread, this, path));
 }
 
 void TopSitesBackend::Shutdown() {
-  BrowserThread::PostTask(
-      BrowserThread::DB, FROM_HERE,
-      base::Bind(&TopSitesBackend::ShutdownDBOnDBThread, this));
 }
 
 void TopSitesBackend::GetMostVisitedThumbnails(
     const GetMostVisitedThumbnailsCallback& callback,
     base::CancelableTaskTracker* tracker) {
-  scoped_refptr<MostVisitedThumbnails> thumbnails = new MostVisitedThumbnails();
-
-  tracker->PostTaskAndReply(
-      BrowserThread::GetMessageLoopProxyForThread(BrowserThread::DB).get(),
-      FROM_HERE,
-      base::Bind(&TopSitesBackend::GetMostVisitedThumbnailsOnDBThread,
-                 this,
-                 thumbnails),
-      base::Bind(callback, thumbnails));
 }
 
 void TopSitesBackend::UpdateTopSites(const TopSitesDelta& delta) {
-  BrowserThread::PostTask(
-      BrowserThread::DB, FROM_HERE,
-      base::Bind(&TopSitesBackend::UpdateTopSitesOnDBThread, this, delta));
 }
 
 void TopSitesBackend::SetPageThumbnail(const MostVisitedURL& url,
                                        int url_rank,
                                        const Images& thumbnail) {
-  BrowserThread::PostTask(
-      BrowserThread::DB, FROM_HERE,
-      base::Bind(&TopSitesBackend::SetPageThumbnailOnDBThread, this, url,
-                 url_rank, thumbnail));
 }
 
 void TopSitesBackend::ResetDatabase() {
-  BrowserThread::PostTask(
-      BrowserThread::DB, FROM_HERE,
-      base::Bind(&TopSitesBackend::ResetDatabaseOnDBThread, this, db_path_));
 }
 
 void TopSitesBackend::DoEmptyRequest(const base::Closure& reply,
                                      base::CancelableTaskTracker* tracker) {
-  tracker->PostTaskAndReply(
-      BrowserThread::GetMessageLoopProxyForThread(BrowserThread::DB).get(),
-      FROM_HERE,
-      base::Bind(&base::DoNothing),
-      reply);
 }
 
 TopSitesBackend::~TopSitesBackend() {
diff -pruN a/chromium-35.0.1916.47/chrome/browser/profiles/profile_impl.cc b/chromium-35.0.1916.47/chrome/browser/profiles/profile_impl.cc
--- a/chromium-35.0.1916.47/chrome/browser/profiles/profile_impl.cc	2014-04-16 22:32:28.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/profiles/profile_impl.cc	2014-04-17 09:56:24.598987406 +0200
@@ -1060,15 +1060,11 @@ Time ProfileImpl::GetStartTime() const {
 }
 
 history::TopSites* ProfileImpl::GetTopSites() {
-  if (!top_sites_.get()) {
-    top_sites_ = history::TopSites::Create(
-        this, GetPath().Append(chrome::kTopSitesFilename));
-  }
-  return top_sites_.get();
+  return NULL;
 }
 
 history::TopSites* ProfileImpl::GetTopSitesWithoutCreating() {
-  return top_sites_.get();
+  return NULL;
 }
 
 void ProfileImpl::OnDefaultZoomLevelChanged() {
diff -pruN a/chromium-35.0.1916.47/chrome/browser/resources/local_ntp/local_ntp.js b/chromium-35.0.1916.47/chrome/browser/resources/local_ntp/local_ntp.js
--- a/chromium-35.0.1916.47/chrome/browser/resources/local_ntp/local_ntp.js	2014-04-16 22:32:29.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/resources/local_ntp/local_ntp.js	2014-04-17 09:56:24.599987406 +0200
@@ -221,19 +221,19 @@ var TILE_MARGIN_START = 20;
 
 
 /** @type {number} @const */
-var MAX_NUM_TILES_TO_SHOW = 8;
+var MAX_NUM_TILES_TO_SHOW = 0;
 
 
 /** @type {number} @const */
-var MIN_NUM_COLUMNS = 2;
+var MIN_NUM_COLUMNS = 0;
 
 
 /** @type {number} @const */
-var MAX_NUM_COLUMNS = 4;
+var MAX_NUM_COLUMNS = 0;
 
 
 /** @type {number} @const */
-var NUM_ROWS = 2;
+var NUM_ROWS = 0;
 
 
 /**
@@ -327,7 +327,6 @@ function onThemeChange() {
                     info.imageVerticalAlignment].join(' ').trim();
   document.body.style.background = background;
   document.body.classList.toggle(CLASSES.ALTERNATE_LOGO, info.alternateLogo);
-  updateThemeAttribution(info.attributionUrl);
   setCustomThemeStyle(info);
   renderTiles();
 }
diff -pruN a/chromium-35.0.1916.47/chrome/browser/search/instant_service.cc b/chromium-35.0.1916.47/chrome/browser/search/instant_service.cc
--- a/chromium-35.0.1916.47/chrome/browser/search/instant_service.cc	2014-04-16 22:32:38.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/search/instant_service.cc	2014-04-17 09:56:24.599987406 +0200
@@ -109,18 +109,10 @@ InstantService::InstantService(Profile*
 
   // TODO(aurimas) remove this #if once instant_service.cc is no longer compiled
   // on Android.
-#if !defined(OS_ANDROID)
-  content::URLDataSource::Add(profile_, new ThumbnailSource(profile_, false));
-  content::URLDataSource::Add(profile_, new ThumbnailSource(profile_, true));
-  content::URLDataSource::Add(profile_, new ThumbnailListSource(profile_));
-#endif  // !defined(OS_ANDROID)
 
   content::URLDataSource::Add(
       profile_, new FaviconSource(profile_, FaviconSource::FAVICON));
   content::URLDataSource::Add(profile_, new LocalNtpSource(profile_));
-  content::URLDataSource::Add(profile_, new MostVisitedIframeSource());
-  content::URLDataSource::Add(
-      profile_, new suggestions::SuggestionsSource(profile_));
 }
 
 InstantService::~InstantService() {
diff -pruN a/chromium-35.0.1916.47/chrome/browser/ui/search/search_ipc_router_policy_impl.cc b/chromium-35.0.1916.47/chrome/browser/ui/search/search_ipc_router_policy_impl.cc
--- a/chromium-35.0.1916.47/chrome/browser/ui/search/search_ipc_router_policy_impl.cc	2014-04-16 22:32:27.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/ui/search/search_ipc_router_policy_impl.cc	2014-04-17 09:56:24.599987406 +0200
@@ -23,7 +23,7 @@ SearchIPCRouterPolicyImpl::SearchIPCRout
 SearchIPCRouterPolicyImpl::~SearchIPCRouterPolicyImpl() {}
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessSetVoiceSearchSupport() {
-  return true;
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessFocusOmnibox(bool is_active_tab) {
@@ -35,15 +35,15 @@ bool SearchIPCRouterPolicyImpl::ShouldPr
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessDeleteMostVisitedItem() {
-  return !is_incognito_ && chrome::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessUndoMostVisitedDeletion() {
-  return !is_incognito_ && chrome::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessUndoAllMostVisitedDeletions() {
-  return !is_incognito_ && chrome::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldProcessLogEvent() {
@@ -85,7 +85,7 @@ bool SearchIPCRouterPolicyImpl::ShouldSe
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSendMostVisitedItems() {
-  return !is_incognito_ && chrome::IsInstantNTP(web_contents_);
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSendThemeBackgroundInfo() {
@@ -93,7 +93,7 @@ bool SearchIPCRouterPolicyImpl::ShouldSe
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSendToggleVoiceSearch() {
-  return true;
+  return false;
 }
 
 bool SearchIPCRouterPolicyImpl::ShouldSubmitQuery() {
diff -pruN a/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/app_launcher_handler.cc b/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/app_launcher_handler.cc
--- a/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/app_launcher_handler.cc	2014-04-16 22:32:23.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/app_launcher_handler.cc	2014-04-17 09:56:24.599987406 +0200
@@ -389,7 +389,7 @@ void AppLauncherHandler::FillAppDictiona
   dictionary->SetBoolean("disableCreateAppShortcut", true);
 #endif
 
-#if defined(OS_CHROMEOS)
+#if 1
   // Making shortcut does not make sense on ChromeOS because it does not have
   // a desktop.
   dictionary->SetBoolean("disableCreateAppShortcut", true);
diff -pruN a/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/new_tab_ui.cc b/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/new_tab_ui.cc
--- a/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/new_tab_ui.cc	2014-04-16 22:32:23.000000000 +0200
+++ b/chromium-35.0.1916.47/chrome/browser/ui/webui/ntp/new_tab_ui.cc	2014-04-17 09:56:24.599987406 +0200
@@ -103,7 +103,6 @@ NewTabUI::NewTabUI(content::WebUI* web_u
   if (!GetProfile()->IsOffTheRecord()) {
     web_ui->AddMessageHandler(new browser_sync::ForeignSessionHandler());
     web_ui->AddMessageHandler(new MetricsHandler());
-    web_ui->AddMessageHandler(new MostVisitedHandler());
     web_ui->AddMessageHandler(new RecentlyClosedTabsHandler());
 #if !defined(OS_ANDROID)
     web_ui->AddMessageHandler(new FaviconWebUIHandler());
@@ -253,7 +252,6 @@ void NewTabUI::RegisterProfilePrefs(
   NewTabPageHandler::RegisterProfilePrefs(registry);
   if (NewTabUI::IsDiscoveryInNTPEnabled())
     SuggestionsHandler::RegisterProfilePrefs(registry);
-  MostVisitedHandler::RegisterProfilePrefs(registry);
   browser_sync::ForeignSessionHandler::RegisterProfilePrefs(registry);
 }
 
