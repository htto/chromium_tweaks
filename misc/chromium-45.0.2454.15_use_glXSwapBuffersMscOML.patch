diff -pruN chromium-45.0.2454.15.orig/ui/gl/gl_bindings_api_autogen_glx.h chromium-45.0.2454.15/ui/gl/gl_bindings_api_autogen_glx.h
--- chromium-45.0.2454.15.orig/ui/gl/gl_bindings_api_autogen_glx.h	2015-07-23 22:09:37.000000000 +0200
+++ chromium-45.0.2454.15/ui/gl/gl_bindings_api_autogen_glx.h	2015-08-24 13:49:44.903314635 +0200
@@ -121,6 +121,10 @@ void glXSelectEventFn(Display* dpy,
                       GLXDrawable drawable,
                       unsigned long mask) override;
 void glXSwapBuffersFn(Display* dpy, GLXDrawable drawable) override;
+int64 glXSwapBuffersMscOMLFn(Display* dpy, GLXDrawable drawable,
+                            int64 target_msc,
+                            int64 divisor,
+                            int64 remainder);
 void glXSwapIntervalEXTFn(Display* dpy,
                           GLXDrawable drawable,
                           int interval) override;
diff -pruN chromium-45.0.2454.15.orig/ui/gl/gl_bindings_autogen_glx.cc chromium-45.0.2454.15/ui/gl/gl_bindings_autogen_glx.cc
--- chromium-45.0.2454.15.orig/ui/gl/gl_bindings_autogen_glx.cc	2015-07-23 22:09:37.000000000 +0200
+++ chromium-45.0.2454.15/ui/gl/gl_bindings_autogen_glx.cc	2015-08-24 20:06:02.329985225 +0200
@@ -104,6 +104,8 @@ void DriverGLX::InitializeStaticBindings
       reinterpret_cast<glXSelectEventProc>(GetGLProcAddress("glXSelectEvent"));
   fn.glXSwapBuffersFn =
       reinterpret_cast<glXSwapBuffersProc>(GetGLProcAddress("glXSwapBuffers"));
+  fn.glXSwapBuffersMscOMLFn =
+      reinterpret_cast<glXSwapBuffersMscOMLProc>(GetGLProcAddress("glXSwapBuffersMscOML"));
   fn.glXSwapIntervalEXTFn = 0;
   fn.glXSwapIntervalMESAFn = 0;
   fn.glXUseXFontFn =
@@ -677,6 +679,18 @@ Debug_glXSwapBuffers(Display* dpy, GLXDr
   g_driver_glx.debug_fn.glXSwapBuffersFn(dpy, drawable);
 }
 
+static int64 GL_BINDING_CALL
+Debug_glXSwapBuffersMscOML(Display* dpy, GLXDrawable drawable,
+                           int64 target_msc,
+                           int64 divisor,
+                           int64 remainder) {
+  GL_SERVICE_LOG("glXSwapBuffersMscOML"
+                 << "(" << static_cast<const void*>(dpy) << ", " << drawable
+                 << ", " << target_msc << ", " << divisor << ", " << remainder
+                 << ")");
+  g_driver_glx.debug_fn.glXSwapBuffersMscOMLFn(dpy, drawable, target_msc, divisor, remainder);
+}
+
 static void GL_BINDING_CALL
 Debug_glXSwapIntervalEXT(Display* dpy, GLXDrawable drawable, int interval) {
   GL_SERVICE_LOG("glXSwapIntervalEXT"
@@ -894,6 +908,10 @@ void DriverGLX::InitializeDebugBindings(
     debug_fn.glXSwapBuffersFn = fn.glXSwapBuffersFn;
     fn.glXSwapBuffersFn = Debug_glXSwapBuffers;
   }
+  if (!debug_fn.glXSwapBuffersMscOMLFn) {
+    debug_fn.glXSwapBuffersMscOMLFn = fn.glXSwapBuffersMscOMLFn;
+    fn.glXSwapBuffersMscOMLFn = Debug_glXSwapBuffersMscOML;
+  }
   if (!debug_fn.glXSwapIntervalEXTFn) {
     debug_fn.glXSwapIntervalEXTFn = fn.glXSwapIntervalEXTFn;
     fn.glXSwapIntervalEXTFn = Debug_glXSwapIntervalEXT;
@@ -1169,6 +1187,13 @@ void GLXApiBase::glXSwapBuffersFn(Displa
   driver_->fn.glXSwapBuffersFn(dpy, drawable);
 }
 
+int64 GLXApiBase::glXSwapBuffersMscOMLFn(Display* dpy, GLXDrawable drawable,
+                                         int64 target_msc,
+                                         int64 divisor,
+                                         int64 remainder) {
+  return driver_->fn.glXSwapBuffersMscOMLFn(dpy, drawable, target_msc, divisor, remainder);
+}
+
 void GLXApiBase::glXSwapIntervalEXTFn(Display* dpy,
                                       GLXDrawable drawable,
                                       int interval) {
@@ -1484,6 +1509,14 @@ void TraceGLXApi::glXSwapBuffersFn(Displ
   glx_api_->glXSwapBuffersFn(dpy, drawable);
 }
 
+int64 TraceGLXApi::glXSwapBuffersMscOMLFn(Display* dpy, GLXDrawable drawable,
+                                          int64 target_msc,
+                                          int64 divisor,
+                                          int64 remainder) {
+  TRACE_EVENT_BINARY_EFFICIENT0("gpu", "TraceGLAPI::glXSwapBuffersMscOML")
+  return glx_api_->glXSwapBuffersMscOMLFn(dpy, drawable, target_msc, divisor, remainder);
+}
+
 void TraceGLXApi::glXSwapIntervalEXTFn(Display* dpy,
                                        GLXDrawable drawable,
                                        int interval) {
diff -pruN chromium-45.0.2454.15.orig/ui/gl/gl_bindings_autogen_glx.h chromium-45.0.2454.15/ui/gl/gl_bindings_autogen_glx.h
--- chromium-45.0.2454.15.orig/ui/gl/gl_bindings_autogen_glx.h	2015-07-23 22:09:37.000000000 +0200
+++ chromium-45.0.2454.15/ui/gl/gl_bindings_autogen_glx.h	2015-08-24 13:49:37.989981346 +0200
@@ -148,6 +148,11 @@ typedef void(GL_BINDING_CALL* glXSelectE
                                                   unsigned long mask);
 typedef void(GL_BINDING_CALL* glXSwapBuffersProc)(Display* dpy,
                                                   GLXDrawable drawable);
+typedef int64(GL_BINDING_CALL* glXSwapBuffersMscOMLProc)(Display* dpy,
+                                                        GLXDrawable drawable,
+                                                        int64 target_msc,
+                                                        int64 divisor,
+                                                        int64 remainder);
 typedef void(GL_BINDING_CALL* glXSwapIntervalEXTProc)(Display* dpy,
                                                       GLXDrawable drawable,
                                                       int interval);
@@ -216,6 +221,7 @@ struct ProcsGLX {
   glXReleaseTexImageEXTProc glXReleaseTexImageEXTFn;
   glXSelectEventProc glXSelectEventFn;
   glXSwapBuffersProc glXSwapBuffersFn;
+  glXSwapBuffersMscOMLProc glXSwapBuffersMscOMLFn;
   glXSwapIntervalEXTProc glXSwapIntervalEXTFn;
   glXSwapIntervalMESAProc glXSwapIntervalMESAFn;
   glXUseXFontProc glXUseXFontFn;
@@ -345,6 +351,10 @@ class GL_EXPORT GLXApi {
                                 GLXDrawable drawable,
                                 unsigned long mask) = 0;
   virtual void glXSwapBuffersFn(Display* dpy, GLXDrawable drawable) = 0;
+  virtual int64 glXSwapBuffersMscOMLFn(Display* dpy, GLXDrawable drawable,
+                                      int64 target_msc,
+                                      int64 divisor,
+                                      int64 remainder) = 0;
   virtual void glXSwapIntervalEXTFn(Display* dpy,
                                     GLXDrawable drawable,
                                     int interval) = 0;
@@ -414,6 +424,7 @@ class GL_EXPORT GLXApi {
   ::gfx::g_current_glx_context->glXReleaseTexImageEXTFn
 #define glXSelectEvent ::gfx::g_current_glx_context->glXSelectEventFn
 #define glXSwapBuffers ::gfx::g_current_glx_context->glXSwapBuffersFn
+#define glXSwapBuffersMscOML ::gfx::g_current_glx_context->glXSwapBuffersMscOMLFn
 #define glXSwapIntervalEXT ::gfx::g_current_glx_context->glXSwapIntervalEXTFn
 #define glXSwapIntervalMESA ::gfx::g_current_glx_context->glXSwapIntervalMESAFn
 #define glXUseXFont ::gfx::g_current_glx_context->glXUseXFontFn
diff -pruN chromium-45.0.2454.15.orig/ui/gl/gl_surface_glx.cc chromium-45.0.2454.15/ui/gl/gl_surface_glx.cc
--- chromium-45.0.2454.15.orig/ui/gl/gl_surface_glx.cc	2015-07-23 22:09:37.000000000 +0200
+++ chromium-45.0.2454.15/ui/gl/gl_surface_glx.cc	2015-08-24 13:59:23.703310934 +0200
@@ -545,7 +545,15 @@ gfx::SwapResult NativeViewGLSurfaceGLX::
       "width", GetSize().width(),
       "height", GetSize().height());
 
-  glXSwapBuffers(g_display, GetDrawableHandle());
+  /* TODO check only once and use function pointer */
+  if (0 && g_glx_oml_sync_control_supported && g_glx_get_msc_rate_oml_supported)
+  {
+    int32 numer, denom;
+    glXGetMscRateOML(g_display, window_, &numer, &denom);
+    glXSwapBuffersMscOML(g_display, GetDrawableHandle(), numer, denom, 0);
+  }
+  else
+    glXSwapBuffers(g_display, GetDrawableHandle());
   return gfx::SwapResult::SWAP_ACK;
 }
 
