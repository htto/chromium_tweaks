diff -pruN chromium-62.0.3192.0.orig/chrome/browser/ui/views/tabs/new_tab_button.cc chromium-62.0.3192.0/chrome/browser/ui/views/tabs/new_tab_button.cc
--- chromium-62.0.3192.0.orig/chrome/browser/ui/views/tabs/new_tab_button.cc	2017-08-22 21:04:40.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/ui/views/tabs/new_tab_button.cc	2017-08-26 21:46:17.855765366 +0200
@@ -133,15 +133,19 @@ void NewTabButton::PaintButtonContents(g
   const float fill_bottom = (visible_height - 2) * scale;
   const float diag_height = fill_bottom - 3.5 * scale;
   const float diag_width = diag_height * Tab::GetInverseDiagonalSlope();
+  // bottom left
   fill.moveTo(diag_width + 4 * scale, fill_bottom);
   fill.rCubicTo(-0.75 * scale, 0, -1.625 * scale, -0.5 * scale, -2 * scale,
                 -1.5 * scale);
-  fill.rLineTo(-diag_width, -diag_height);
+  fill.rLineTo(0, -diag_height);
+  // top left
   fill.rCubicTo(0, -0.5 * scale, 0.25 * scale, -scale, scale, -scale);
   fill.lineTo((width() - 4) * scale - diag_width, scale);
+  // top right
   fill.rCubicTo(0.75 * scale, 0, 1.625 * scale, 0.5 * scale, 2 * scale,
                 1.5 * scale);
-  fill.rLineTo(diag_width, diag_height);
+  fill.rLineTo(0, diag_height);
+  // bottom right
   fill.rCubicTo(0, 0.5 * scale, -0.25 * scale, scale, -scale, scale);
   fill.close();
   PaintFill(pressed, scale, fill, canvas);
@@ -227,7 +231,7 @@ void NewTabButton::GetBorderPath(float b
   path->moveTo(diag_width + 4 * scale - 1, stroke_bottom);
   path->rCubicTo(-0.75 * scale, 0, -1.625 * scale, -0.5 * scale, -2 * scale,
                  -1.5 * scale);
-  path->rLineTo(-diag_width, -diag_height);
+  path->rLineTo(0, -diag_height);
   if (extend_to_top) {
     // Create the vertical extension by extending the side diagonals at the
     // upper left and lower right corners until they reach the top and bottom of
@@ -246,7 +250,7 @@ void NewTabButton::GetBorderPath(float b
     path->lineTo((width() - 4) * scale - diag_width + 1, button_y + scale - 1);
     path->rCubicTo(0.75 * scale, 0, 1.625 * scale, 0.5 * scale, 2 * scale,
                    1.5 * scale);
-    path->rLineTo(diag_width, diag_height);
+    path->rLineTo(0, diag_height);
     path->rCubicTo(0.5 * scale, 1.125 * scale, -0.5 * scale, scale + 2, -scale,
                    scale + 2);
   }
diff -pruN chromium-62.0.3192.0.orig/chrome/browser/ui/views/tabs/tab.cc chromium-62.0.3192.0/chrome/browser/ui/views/tabs/tab.cc
--- chromium-62.0.3192.0.orig/chrome/browser/ui/views/tabs/tab.cc	2017-08-22 21:04:40.000000000 +0200
+++ chromium-62.0.3192.0/chrome/browser/ui/views/tabs/tab.cc	2017-08-26 21:46:17.855765366 +0200
@@ -145,12 +145,13 @@ gfx::Path GetFillPath(float scale, const
   // The bottom of the tab needs to be pixel-aligned or else when we call
   // ClipPath with anti-aliasing enabled it can cause artifacts.
   const float bottom = std::ceil(size.height() * scale);
+  const float inset = std::floor(endcap_width * scale / 2);
 
   gfx::Path fill;
-  fill.moveTo(right - 1, bottom);
+  fill.moveTo(right - inset - 1, bottom);
   fill.rCubicTo(-0.75 * scale, 0, -1.625 * scale, -0.5 * scale, -2 * scale,
                 -1.5 * scale);
-  fill.lineTo(right - 1 - (endcap_width - 2) * scale, 2.5 * scale);
+  fill.lineTo(right - inset - 1 - 2 * scale, 2.5 * scale);
   // Prevent overdraw in the center near minimum width (only happens if
   // scale < 2).  We could instead avoid this by increasing the tab inset
   // values, but that would shift all the content inward as well, unless we
@@ -162,10 +163,10 @@ gfx::Path GetFillPath(float scale, const
   fill.rCubicTo(-0.375 * scale, -1 * scale, -1.25 * scale + offset,
                 -1.5 * scale, -2 * scale + offset, -1.5 * scale);
   if (overlap < 0)
-    fill.lineTo(scaled_endcap_width, scale);
+    fill.lineTo(1 + inset + 4 * scale, scale);
   fill.rCubicTo(-0.75 * scale, 0, -1.625 * scale - offset, 0.5 * scale,
                 -2 * scale - offset, 1.5 * scale);
-  fill.lineTo(1 + 2 * scale, bottom - 1.5 * scale);
+  fill.lineTo(1 + inset + 2 * scale, bottom - 1.5 * scale);
   fill.rCubicTo(-0.375 * scale, scale, -1.25 * scale, 1.5 * scale, -2 * scale,
                 1.5 * scale);
   fill.close();
@@ -186,13 +187,15 @@ gfx::Path GetBorderPath(float scale,
   const float top = scale - 1;
   const float right = size.width() * scale;
   const float bottom = size.height() * scale;
+  const float inset = std::floor(endcap_width * scale / 2);
 
   gfx::Path path;
   path.moveTo(0, bottom);
   path.rLineTo(0, -1);
+  path.rLineTo(inset, 0);
   path.rCubicTo(0.75 * scale, 0, 1.625 * scale, -0.5 * scale, 2 * scale,
                 -1.5 * scale);
-  path.lineTo((endcap_width - 2) * scale, top + 1.5 * scale);
+  path.lineTo(inset + 2 * scale, top + 1.5 * scale);
   if (extend_to_top) {
     // Create the vertical extension by extending the side diagonals until
     // they reach the top of the bounds.
@@ -202,15 +205,16 @@ gfx::Path GetBorderPath(float scale,
     path.lineTo(right - (endcap_width - 2) * scale - dx, 0);
     path.rLineTo(dx, dy);
   } else {
-    path.rCubicTo(0.375 * scale, -scale, 1.25 * scale, -1.5 * scale, 2 * scale,
-                  -1.5 * scale);
-    path.lineTo(right - endcap_width * scale, top);
+    path.rCubicTo(0.375 * scale, -scale, 1.25 * scale, -1.5 * scale,
+                  2 * scale, -1.5 * scale);
+    path.lineTo(right - inset - 4 * scale, top);
     path.rCubicTo(0.75 * scale, 0, 1.625 * scale, 0.5 * scale, 2 * scale,
                   1.5 * scale);
   }
-  path.lineTo(right - 2 * scale, bottom - 1 - 1.5 * scale);
+  path.lineTo(right - inset - 2 * scale, bottom - 1 - 1.5 * scale);
   path.rCubicTo(0.375 * scale, scale, 1.25 * scale, 1.5 * scale, 2 * scale,
                 1.5 * scale);
+  path.rLineTo(inset, 0);
   path.rLineTo(0, 1);
   path.close();
 
